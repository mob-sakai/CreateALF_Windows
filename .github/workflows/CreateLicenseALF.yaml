name: Create ALF File

on: [push]

jobs:
#   build-macos-all:
#     runs-on: [macOS-latest]
#     strategy:
#       matrix:
#         unity-version: [2018.4.9f1, 2019.2.13f1, 2019.3.0b12, 2020.1.0a14]
#     steps:
#     - uses: actions/setup-ruby@v1
#       with:
#         ruby-version: '2.6.3'
#     - run: gem install u3d -v 1.2.1
#     - run: sudo /Users/runner/hostedtoolcache/Ruby/2.6.3/x64/bin/u3d install ${{ matrix.unity-version }} --all
#   build-windows-all:
#     runs-on: [windows-latest]
#     strategy:
#       matrix:
#         unity-version: [2018.4.9f1, 2019.2.13f1, 2019.3.0b12, 2020.1.0a14]
#     steps:
#     - uses: actions/setup-ruby@v1
#       with:
#         ruby-version: '2.6.3'
#     - run: gem install u3d -v 1.2.1
#     - run: u3d install ${{ matrix.unity-version }} --all
#   build-linux-all:
#     runs-on: [ubuntu-latest]
#     strategy:
#       matrix:
#         unity-version: [2019.1.0f2, 2018.3.0f2, 2018.1.0b8]
#     steps:
#     - uses: actions/setup-ruby@v1
#       with:
#         ruby-version: '2.6.3'
#     - run: gem install u3d -v 1.2.1
#     - run: sudo apt-get update
#     - run: sudo apt-get -y install gconf-service lib32gcc1 lib32stdc++6 libasound2 libc6 libc6-i386 libcairo2 libcap2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libfreetype6 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libgl1-mesa-glx libglib2.0-0 libglu1-mesa libgtk2.0-0 libnspr4 libnss3 libpango1.0-0 libstdc++6 libx11-6 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxtst6 zlib1g debconf npm libpq5
#     - run: sudo /opt/hostedtoolcache/Ruby/2.6.3/x64/bin/u3d install ${{ matrix.unity-version }} --all

#   build-windows-test1:
#     runs-on: windows-latest
#     steps:
#     - shell: cmd
#       run: bitsadmin /TRANSFER bj /download /priority normal https://download.unity3d.com/download_unity/497f083a43af/Windows64EditorInstaller/UnitySetup64.exe %CD%\UnitySetup64.exe
#     - shell: cmd
#       run: |
#         dir
#         UnitySetup64.exe /UI=reduced /S /D=C:\Program Files\Unity_2018.4.13f1
#     - run: dir "C:\Program Files\"
#     - run: |
#         & 'C:\Program Files\Unity_2018.4.13f1\Editor\Unity.exe' -quit -batchMode -nographics -logfile -createManualActivationFile
#     - run: cat Unity_v2018.4.13f1.alf
  
#   build-windows:
#     runs-on: windows-latest
#     strategy:
#       matrix:
#         unity-version: [2018.4.9f1, 2020.1.0a14]
#     steps:
#     - id: z
#       uses: pCYSl5EDgo/setup-unity@master
#       with:
#         unity-version: ${{ matrix.unity-version }}
#     - run: dir "C:\Program Files\Unity\"
#     - run: dir 'C:\Program Files\Unity\Editor\'
#     - run: echo ${{ steps.z.outputs.id }}
#     - run: |
#         & "C:\Program Files\Unity\Editor\Unity.exe" -quit -batchMode -nographics -logfile -createManualActivationFile
#     - run: dir
#     - run: cat Unity_v${{ matrix.unity-version }}.alf
    
#   build-mac:
#     runs-on: macOS-latest
#     strategy:
#       matrix:
#         unity-version: [2018.4.9f1, 2020.1.0a14]
#     steps:
#     - uses: pCYSl5EDgo/setup-unity@master
#       with:
#         unity-version: ${{ matrix.unity-version }}
#     - run: |
#         ls -l /Applications/Unity/
#         ls -l /Applications/Unity/Unity.app/
#         ls -l /Applications/Unity/Unity.app/Contents/
#         ls -l /Applications/Unity/Unity.app/Contents/Managed/
#     - run: /Applications/Unity/Unity.app/Contents/MacOS/Unity -quit -batchMode -createManualActivationFile -logfile || exit 0
#     - run: cat Unity_v${{ matrix.unity-version }}.alf

  build-ubuntu:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        unity-version: 
        - 2018.4.9f1
        - 2018.4.13f1
        - 2019.3.0f1
    steps:
    - uses: pCYSl5EDgo/setup-unity@master
      with:
        unity-version: ${{ matrix.unity-version }}
    - run: ls -l /opt/Unity/Editor/
    - run: ls -l /opt/Unity/Editor/Data/
    - run: |
        tar cf - /opt/Unity/Editor/Data/MonoBleedingEdge | 7za a -si MonoBleedingEdge.tar.7z
        tar cf - /opt/Unity/Editor/Data/BuildTargetTools | 7za a -si BuildTargetTools.tar.7z
        tar cf - /opt/Unity/Editor/Data/il2cpp | 7za a -si il2cpp.tar.7z
        tar cf - /opt/Unity/Editor/Data/Mono | 7za a -si Mono.tar.7z
        tar cf - /opt/Unity/Editor/Data/Resources | 7za a -si Resources.tar.7z
        tar cf - /opt/Unity/Editor/Data/Tools | 7za a -si Tools.tar.7z
        tar cf - /opt/Unity/Editor/Data/NetStandard | 7za a -si NetStandard.tar.7z
        tar cf - /opt/Unity/Editor/Data/PlaybackEngines | 7za a -si PlaybackEngines.tar.7z
        tar cf - /opt/Unity/Editor/Data/PackageManager | 7za a -si PackageManager.tar.7z
        tar cf - /opt/Unity/Editor/Data/UnityExtensions | 7za a -si UnityExtensions.tar.7z
        tar cf - /opt/Unity/Editor/Data/Managed | 7za a -si Managed.tar.7z
        tar cf - /opt/Unity/Editor/Data/CGIncludes | 7za a -si CGIncludes.tar.7z
        tar cf - /opt/Unity/Editor/Data/MonoEmbedRuntime | 7za a -si MonoEmbedRuntime.tar.7z
        tar cf - /opt/Unity/Editor/Data/locales | 7za a -si locales.tar.7z
        tar cf - /opt/Unity/Editor/Data/BugReporter | 7za a -si BugReporter.tar.7z
        ls -l

#     - run: echo -n $ULF aaa > Unity.ulf
#       env:
#         ULF: ${{ secrets.ulf_linux }}
#     - run: /opt/Unity/Editor/Unity -nographics -quit -batchmode -manualLicenseFile Unity.ulf -logfile || exit 0
#     - run: /opt/Unity/Editor/Unity -nographics -quit -batchmode -password "$PWD" -username pcysl5edgo@yahoo.co.jp -logfile || exit 0
#       env:
#         PWD: ${{ secrets.pwd }}
#   build-gableroux:
#     runs-on: [ubuntu-latest]
#     strategy:
#       matrix:
#         unity-version: 
#         - 2018.4.9f1
#         - 2018.4.10f1
#         - 2018.4.12f1
#     container: docker://gableroux/unity3d:${{ matrix.unity-version }}
#     steps:
#     - run: /opt/Unity/Editor/Unity -quit -batchmode -nographics -logfile -createManualActivationFile || exit 0
#     - run: cat Unity_v${{ matrix.unity-version }}.alf
#     - run: |
#         mkdir a
#         mv Unity_v${{ matrix.unity-version }}.alf a/
#     - uses: actions/upload-artifact@master
#       with:
#         path: a
#         name: ${{ matrix.unity-version }}
